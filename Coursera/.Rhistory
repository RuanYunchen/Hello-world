1.985*0.41
((3.3^2)/75)+((2.3^2)/257)
(((3.3^2)/75)+((2.3^2)/257))^0.5
(5.9-1.0)-qnorm(0.975, mean=0, sd=1)*((((3.3^2)/75)+((2.3^2)/257))^0.5)
(((3.3^2)/75+(2.3^2)/257)*0.5)
(((3.3^2)/75)+((2.3^2)/257))^0.5
(5.9-1.0)+qnorm(0.975, mean=0, sd=1)*((((3.3^2)/75)+((2.3^2)/257))^0.5)
(5.9-1.0)-qnorm(0.975, mean=0, sd=1)*((((3.3^2)/75)+((2.3^2)/257))^0.5)
(((89.6)^2)/32)+(((65.3)^2)/32)
(((89.6^2)/32)+((65.3^2)/32))^0.5
(((89.6^2)/32)+((65.3^2)/32))
(58.2-53.7)/((((89.6^2)/32)+((65.3^2)/32))^0.5)
qt(0.975,df=32+32-2)
qt(0.975,df=60)
qt(0.975,df=32+32-2)
qt(0.975,df=62)
(585.2-533.7)/((((89.6^2)/32)+((65.3^2)/32))^0.5)
?qt
dt((585.2-533.7)/((((89.6^2)/32)+((65.3^2)/32))^0.5), df=32+32-2)
dt((5.9-1.0)/(((3.3^2)/75)+((2.3^2)/257))^0.5), df=75+257-2)
dt(((((5.9-1.0)/(((3.3^2)/75)))+((2.3^2)/257))^0.5), df=75+257-2)
3.966017e-08
x<-c(15, 7, 15, 10, 5, 5, 2, 3, 12, 16, 15, 37, 8, 14, 10, 18, 3, 25, 15, 5, 5)
y<-c(6, 8, 15, 6, 5, 14, 10, 10, 12, 5)
mean(x)
mean(y)
sd(x)
sd(y)
(((sd(x)^2)/21)+((sd(y)^2)/10))^0.5
mean(x)
mean(y)
sd(x)
sd(y)
(((sd(x)^2)/21)+((sd(y)^2)/10))^0.5
qt(0.975,df=21+10-2)
(mean(x)-mean(y))+(qt(0.975,df=21+10-2)*((((sd(x)^2)/21)+((sd(y)^2)/10))^0.5))
(mean(x)-mean(y))-(qt(0.975,df=21+10-2)*((((sd(x)^2)/21)+((sd(y)^2)/10))^0.5))
t.test
？t.test
t.test?t.test
?t.test
t.test(1:10, y = c(7:20))      # P = .00001855
t.test(1:10, y = c(7:20, 200)) # P = .1245    -- NOT significant anymore
plot(extra ~ group, data = sleep)
with(sleep, t.test(extra[group == 1], extra[group == 2]))
t.test(extra ~ group, data = sleep)
x<-c(15, 7, 15, 10, 5, 5, 2, 3, 12, 16, 15, 37, 8, 14, 10, 18, 3, 25, 15, 5, 5)
y<-c(6, 8, 15, 6, 5, 14, 10, 10, 12, 5)
t.test（x, y）
t.test(x, y)
x<-rnorm(100)
x<-c(15, 7, 15, 10, 5, 5, 2, 3, 12, 16, 15, 37, 8, 14, 10, 18, 3, 25, 15, 5, 5)
z<-r
z<-rnorm(100)
mean(z)
z<-rnorm(mean=0,sd=1,100)
mean(z)
remove(z)
T8_1<-read.spss((file.choose(),header=TRUE))
library(foreign)
T8_1<-read.spss((file.choose(),header=TRUE))
T8_1<-read.spss(file.choose(),header=TRUE)
T8_1<-read.spss(file.choose())
T8_1
?t.test
str(T8_1)
t.test(EDU,RUR)
t.test(EDU,RUR)
t.test($ INC,$ RUR)
t.test(EDU~RUR,data=T8_1)
t.test(EDU[RUR==1],EDU[RUR==2]data=T8_1)
str(T8_1)
?mean
?group
?table()
remove(x,y,z)
remove(x,y,z,T8_1)
p_value = function(x,y,z){
x=data.frame(x)
y=data.frame(y)
c=nrow(x)
d=nrow(y)
colnames(x)='variable'
colnames(y)='variable'
a=data.frame(rep('A',c))
b=data.frame(rep('B',d))
colnames(a)='group'
colnames(b)='group'
data=data.frame(variable=rbind(x,y),group=rbind(a,b))
if(leveneTest(variable~group,data)$Pr[1] =='NaN'){
print(NA)
}else{
if(leveneTest(variable~group,data)$Pr[1] >0.05){
t.test(x,y,paired=z)$p.value
}else{
wilcox.test(data[1:c,1],data[(c+1):(c+d),1],paired=z)$p.value
}
}
}
x<-c(15, 7, 15, 10, 5, 5, 2, 3, 12, 16, 15, 37, 8, 14, 10, 18, 3, 25, 15, 5, 5)
y<-c(6, 8, 15, 6, 5, 14, 10, 10, 12, 5)
p_value(x,y,T)
remove(x,y,p_value)
library(foreign)
T8_1<-read.spss(file.choose())
str(T8_1)
t8 <- data.table(T8_1)
library(foreign)
library(data.table)
t8 <- data.table(T8_1)
str(t8)
t8
remove(t8)
str(T8_1)
EDU
x<-c(EDU,data=T8_1)
x<-c($EDU,data=T8_1)
T8_1[which(T8_1$NAT=="1"),]
T8_1[which(T8_1$NAT==1),]
str(T8_1)
T8_1[which(T8_1$NAT==1),"EDU"]
list(T8_1)
?subset
library(data.table)
T8<-data.table(T8_1)
str(T8)
NAT1<-subset(T8, NAT==1)
T8
NAT1<-subset(T8_1, NAT==1)
remove(T8,T8_1)
？data.frame
data.frame
?data.frame
T8_1<-read.spss(file.choose())
str(T8_1)
data[T8_1[,"NAT"]=="1",]
data[T8_1[,"NAT"]==1,]
data[T8_1[,NAT]==1,]
data[T8_1$NAT==1,]
T8
T8_1
who()
Print(T8_1)
print(T8_1)
bmi <- T8_1$INC/T8_1$NAT
remove(bmi)
edu <- T8_1$EDU
nat <- T8_1$NAT
data.frame(edu,nat)
t8<-data.frame(edu,nat)
t.test(edu ~ nat, data = t8)
?t.test
with(t8, t.test(edu[nat == 1], edu[nat == 3]))
T8_1$EDU
T8_1$edu[nat == 1]
T8_1$edu[nat == 2]
t8$edu[nat == 2]
x<-t8$edu[nat == 1]
y<-t8$edu[nat == 3]
?leveneTest
??leveneTest
library(car)
leveneTest(x,y)
t8
leveneTest(edu,nat,data=t8)
leveneTest(y+edu,gourp=nat,data=t8)
leveneTest(y=t8$edu,group=t8$nat)
with(t8, leveneTest(edu[nat == 1], edu[nat == 3]))
knitr::opts_chunk$set(echo = TRUE)
(mean(a)-mean(b))/((((sd(a)^2)/8)+(((sd(b)^2)/8)))^0.5)
View(t8)
remove(x,y,edu,nat,t8,T8_1)
f <- function(x, y = 1, z = 2) {
x + y + z
}
f(10)
remove(f)
z<-function(x,y,a,b,n1,n2){
(x-b)/((((a^2)/n1)+(b^2)/n2)^0.5)
}
z<-function(x,y,a,b,n1,n2){
(x-b)/((((a^2)/n1)+(b^2)/n2)^0.5)
}
z(69.2, 67.5, 49.3, 64.5, 50, 80)
(x-y)/((((a^2)/n1)+(b^2)/n2)^0.5)
remove(z)
z<-function(x,y,a,b,n1,n2){
(x-y)/((((a^2)/n1)+(b^2)/n2)^0.5)
}
z(69.2, 67.5, 49.3, 64.5, 50, 80)
remove(z)
z<-function(x,y,a,b,n1,n2){
(x-y)/(((((a^2)/n1)+(b^2)/n2))^0.5)
}
z(69.2, 67.5, 49.3, 64.5, 50, 80)
remove(z)
z<-function(x,y,a,b,q,w){
(x-y)/(((((a^2)/q)+(b^2)/w))^0.5)
}
z(69.2, 67.5, 49.3, 64.5, 50, 80)
remove(z)
Lag <- function(x, lag=1){
length.x <- length(x)
c(rep(NA, lag), x[-((length.x - lag + 1):length.x)])
}
Lag(1:10)
Lag(1:10, 2)
Lag(letters)
367.75/2
1612/21
183/76
e^0.857
exp(0.851)
exp(0)
exp(0.857)
exp(2.35)
0.703*0.859
0.604-0.506
exp(0.005)
exp(0.627)
exp(0.325)
exp(-0.352)
pi_est
π
pi/3^0.5
pi
(0.05*4.114)/( pi/3^0.5)
(0.05*4.114)/( pi/(3^0.5))
(0.627*0.487)/( pi/(3^0.5))
(0.305*0.211)/( pi/(3^0.5))
library(ggplot2)
library(data.table) #data.table package is for data munging
library(plotly)
library(ggthemes)
library(reshape2)
library(readstata13)
divorce <- read.dta13(file.choose(),convert.factors=F)
divorce <- data.table(divorce)
str(divorce)
divorce
remove(divorce)
gender <- read.dta13(file.choose(),convert.factors=F)
gender <- data.table(gender)
str(gender)
gender
ggplot(gender)+geom_smooth(aes(age ,group=1),stat="count",col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Trend Of Divorce")+ylab("No of divorce")+xlab("Birth")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
qplot(age, gender, data = gender, geom = "line")
> plot(data)
plot(data)
plot(data)+
means <- tapply(data$value, data$month, mean)+
lines(means ~ as.numeric(names(means)))
plot(gender)+
means <- tapply(gender$gender, gender$age, mean)+
lines(means ~ as.numeric(names(means)))
plot(gender)+
means <- tapply(gender$gender, gender$age, mean)+
lines(means ~ as.numeric(names(means)))
plot(gender)
means <- tapply(gender$gender, gender$age, mean)
lines(means ~ as.numeric(names(means)))
plot(gender$gender~gender$age,type="l")
remove(means)
plot(gender$gender~gender$age,type="l")
plot(gender$gender~gender$age,type="l")
plot(gender)
means <- tapply(gender$gender, gender$age, mean)
lines(means ~ as.numeric(names(means)))
plot(means~gender$age,type="l")
remove(means)
ggplot(gender)+geom_smooth(aes(age ,group=1),stat="count",col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Trend Of Divorce")+ylab("No of divorce")+xlab("Birth")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
ggplot(gender)+geom_smooth(aes(age ,group=1),stat="count",col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of observations")+ylab("No of divorce")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
ggplot(gender)+geom_smooth(aes(age ,group=1),stat="count",col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
p <- ggplot(data = gender,aes(x = age))
p <- p + geom_histogram()
summary(p)
p <- p + geom_histogram(gender)
p <- ggplot(data = gender,aes(x = age))
p <- p + geom_histogram(gender)
remove(p)
?stat
?ggplot
ggplot(gender)+geom_smooth(aes(age ,group=1),stat="summary",col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d <- ggplot(gender, aes(age))
d + geom_bar()
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "bar")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line")
d <- ggplot(gender)+geom_smooth(aes(age ,group=1),col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of gender")+ylab("means of gender")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d + geom_bar()
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line")
d <- ggplot(gender)+geom_smooth(aes(age ,group=1),col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of gender")+ylab("means of gender")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))+
stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line")
ggplot(gender)+geom_smooth(aes(age ,group=1),col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of gender")+ylab("means of gender")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))+
stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line")
d <- ggplot(gender)+geom_smooth(aes(age ,group=1),col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of gender")+ylab("means of gender")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))+
d + geom_bar()
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line")
d <- ggplot(gender)+geom_smooth(aes(age ,group=1),col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of gender")+ylab("means of gender")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))+
d + geom_bar()
d <- ggplot(gender, aes(age))
d + geom_bar()
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line")
d <- ggplot(gender, aes(age))
d + geom_bar()
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line")
d <- ggplot(gender, aes(age))
d + geom_bar()
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line")
d <- ggplot(gender)+geom_smooth(aes(age ,group=1),stat="count",col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d + geom_bar()
d <- ggplot(gender)+geom_smooth(aes(age ,group=1),col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d + geom_bar()
d <- ggplot(gender)+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d + geom_bar()
d <- ggplot(gender, aes(age))+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d + geom_bar()
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line")
d + geom_bar(,title = element_text(colour = "white"))
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line")
?ggplot
d + geom_bar(col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
d + stat_summary(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
d + geom_bar(col="#B83238")
d <- ggplot(gender, aes(age))+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d + geom_bar(col="#B83238")
d <- ggplot(gender, aes(age))+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("white")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d + geom_bar(col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
ggplot(gender)+geom_smooth(aes(age ,group=1),stat="count",col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
ggplot(gender)+geom_smooth(aes(age ,group=1),stat="count",col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("white")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
ggplot(gender)+geom_smooth(aes(age ,group=1),stat="count",col="#B83238")+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("red")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d + geom_bar(col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
d + geom_bar(aes(y = gender), fun.y = "mean",col="#B83238")
d + geom_bar(aes(y = gender), fun.y = "mean",col="#B83238")
d + geom_bar(col="#B83238")
show(d)
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
d + stat_summary(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
d + stat_summary(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
d + stat_bin(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
d + stat_summary(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")+geom_point()
d <- ggplot(gender, aes(age))+geom_point()
d <- ggplot(gender, aes(age))+geom_point()+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("re")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d + geom_bar(col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
d <- ggplot(gender, aes(age))+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("re")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d + geom_bar(col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean",colour = "red", size = 2, geom = "line",col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1, geom = "line",col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 2, geom = "line",col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 10, geom = "line",col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1.2, geom = "line",col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1.5, geom = "line",col="#B83238")
d + stat_summary(fun.y = mean, fun.ymin = min, fun.ymax = max,
colour = "red")
d + stat_summary(fun.y = mean, fun.ymin = min, fun.ymax = max,colour = "red")
d + stat_summary(aes(y = gender), fun.y = mean, fun.ymin = min, fun.ymax = max,colour = "red")
d + stat_summary(aes(y = gender), fun.y = mean, colour = "red")
d + stat_summary(aes(y = gender), fun.y = mean, colour = "red")
d + stat_summary(aes(y = gender), fun.y = mean, fun.ymin = min, fun.ymax = max,colour = "red")
d + stat_summary_bin(aes(gender), fun.y = "mean", geom = "bar")
d <- ggplot(gender, aes(age))+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("re")+ggtitle("Distribution of observations")+ylab("No of observations")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d + geom_bar(col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1.5, geom = "line",col="#B83238")
d + stat_summary(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
d + stat_summary(aes(y = gender), fun.y = mean, fun.ymin = min, fun.ymax = max,colour = "red")
d + stat_summary(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1.5, geom = "line",col="#B83238")
d + stat_summary(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1.5, geom = "line",col="#B83238")
d + stat_summary(aes(y = gender), fun.y = "mean", geom = "line",col="#B83238")
?ggplot
d + stat_summary(aes(y = gender), fun.y = "mean",size = 1.5,geom = "line",col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1.2, geom = "line",col="#B83238")
d + stat_summary(aes(y = gender), fun.y = "mean",size = 1.2,geom = "line",col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1.5, geom = "line",colors(green))
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1.5, geom = "line",colors(green))
??color
?ggplot
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1.5, geom = "line",colour = "white")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1.5, geom = "line",colour = "red")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1, geom = "line",colour = "red")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1, geom = "line",colour = "white")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1, geom = "line",colour = "green")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1, geom = "line",colour = "red")
d + stat_summary(aes(y = gender), fun.y = "mean",size = 1.2,geom = "line",col="#B83238")
??col
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1.2, geom = "line",col="#B83238")
d + stat_summary(aes(y = gender), fun.y = "mean",size = 1.2,geom = "line",col="#B83238")
d + stat_summary(aes(y = gender), fun.y = "mean",size = 1.2,geom = "line",col="#B83238")
d <- ggplot(gender, aes(age))+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("re")+ggtitle("Distribution of gender")+ylab("Means of gender")+xlab("age")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d + geom_bar(col="#B83238")
d + stat_summary_bin(aes(y = gender), fun.y = "mean", size = 1.2, geom = "line",col="#B83238")
d + stat_summary(aes(y = gender), fun.y = "mean",size = 1.2,geom = "line",col="#B83238")
library(ggplot2)
library(data.table) #data.table package is for data munging
library(plotly)
library(ggthemes)
library(reshape2)
library(readstata13)
fangfang <- read.dta13(file.choose(),convert.factors=F)
fangfang <- read.dta13(file.choose(),convert.factors=F)
fangfang <- data.table(fangfang)
str(fangfang)
fangfang
d <- ggplot(fangfang, aes(income))+
theme(axis.text.x=element_text(angle = 90))+theme_solarized(light = FALSE) +
scale_colour_solarized("re")+ggtitle("Distribution of insurance")+ylab("insurance")+xlab("income")+
theme(axis.title.x = element_text(colour = "white"),axis.title.y = element_text(colour = "white"),title = element_text(colour = "white"))
d + stat_summary_bin(aes(y = insurance), fun.y = "mean", size = 1.2, geom = "line",col="#B83238")
d + stat_summary(aes(y = insurance), fun.y = "mean",size = 1.2,geom = "line",col="#B83238")
d + stat_summary_bin(aes(y = insurance), fun.y = "mean", size = 1.2, geom = "line",col="#B83238")
d + stat_summary(aes(y = insurance), fun.y = "mean",size = 1.2,geom = "line",col="#B83238")
d + stat_summary_bin(aes(y = insurance), fun.y = "mean", size = 1.2, geom = "line",col="#B83238")
library(KernSmooth)
getwd()
getwd()
setwd("~/Hello-world/Coursera")
getwd()
dir()
file.remove(my function.R)
?file.remove
file.remove("my function")
dir()
file.remove("my function.R")
dir()
getwd()
file.remove("myfunction.txt")
dir()
file.remove("my function.txt")
file.remove("myfunction.R")
myfunction <- function(x){
y <- rnorm(100)
mean(x)
}
x + rnorm(length(x))
source <- function(x){
x + rnorm(length(x))
}
